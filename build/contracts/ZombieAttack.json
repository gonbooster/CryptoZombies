{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Proyectos/CryptoZombies/contracts/zombieattack.sol\":\"ZombieAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Proyectos/CryptoZombies/contracts/ownable.sol\":{\"keccak256\":\"0xa777efbd73483e8ef19a1e1facd6e88884e8c5513bf856129c5e6fe445bd3edb\",\"urls\":[\"bzz-raw://e159dba8f2df7bdf44c91f42e0b6d8bca71e2b0db03edebc0501f982e2011ffc\",\"dweb:/ipfs/QmQ6nePReFMK3sTA6mdAe6MCa6TSnPkKC7rUxTiNgowKc2\"]},\"/D/Proyectos/CryptoZombies/contracts/safemath.sol\":{\"keccak256\":\"0x2a8b3cff3972e1f80d5036ab53bb09ea6fd965a2323a4c787d9e9720835dfb79\",\"urls\":[\"bzz-raw://d1a6fc90c9b5fa692488c277d51798abdbf282166e82b9c35ea43dfbf5d68291\",\"dweb:/ipfs/Qmc3hjQSsGypRH5TWf4yVM1nTb6YnJkEAHDCmXuRKRpcP2\"]},\"/D/Proyectos/CryptoZombies/contracts/zombieattack.sol\":{\"keccak256\":\"0xe863c6926c720bb66b48e26e2f72006fdd0676527f3d39e9eba1c85b3d8ed132\",\"urls\":[\"bzz-raw://4dbdcbec7af464fcc83dcc1eb96e3404b6e469a29948ce5812ba9adbfbf70f3b\",\"dweb:/ipfs/Qmcer8RrkKPhoQFVVUbfkKVeLPd6m54SXfoHsho84v2aAz\"]},\"/D/Proyectos/CryptoZombies/contracts/zombiefactory.sol\":{\"keccak256\":\"0xe0cba4312df3673df61e2856ca443ffa452ec7af0af3d05c8da9a7d0506c1cad\",\"urls\":[\"bzz-raw://ff1301ff9314fc2d8aca9c945f10ab7d3c6e32f7f7da00f51a50e478053c4d09\",\"dweb:/ipfs/QmdHHkxQshJsJDaQ4LLcr4HqoduFVkwdoY7zE4LhqycQiY\"]},\"/D/Proyectos/CryptoZombies/contracts/zombiefeeding.sol\":{\"keccak256\":\"0x92759f3fbb4d9034972725f7a66693a912696445b70f45be9977dc305c7d4fc5\",\"urls\":[\"bzz-raw://989ede6313118cc4451f720a644cacabb733e22e62c38a27dccdd0e6d7c88b4f\",\"dweb:/ipfs/QmRk7JCKHt1s8ynJ9JqTaraPLTQ3eExPdnCyZzugk42DGm\"]},\"/D/Proyectos/CryptoZombies/contracts/zombiehelper.sol\":{\"keccak256\":\"0x9efae6ebbd4ec1c2dcfbcb8779f05eb1efff28f931b7fb325542497f182ab7f3\",\"urls\":[\"bzz-raw://0342be98073c23d59baeb468c3898d2eedf307e9751b7e8cfefc5b00e006776a\",\"dweb:/ipfs/QmQFqgYbVJb5cyNkEwVNKJapMvQiH5AByMQfygLKqPAjHY\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c6800060085560006009556046600a55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611e4d806100f96000396000f3fe6080604052600436106100fe5760003560e01c8063715018a611610095578063b2bdfa7b11610064578063b2bdfa7b146105a8578063c39cbef1146105ff578063ccf670f81461068f578063e1fa7638146106ca578063f2fde38b1461070f576100fe565b8063715018a6146104435780637bff0a011461045a5780638da5cb5b146105225780638f32d59b14610579576100fe565b80634412e104116100d15780634412e1041461028c578063528b7b8f146103325780635f4623f1146103ad5780635faf2880146103fe576100fe565b80630ce90ec21461010357806317a7f4cc146101315780632052465e146101765780633ccfd60b14610275575b600080fd5b61012f6004803603602081101561011957600080fd5b8101908080359060200190929190505050610760565b005b34801561013d57600080fd5b506101746004803603604081101561015457600080fd5b8101908080359060200190929190803590602001909291905050506107c8565b005b34801561018257600080fd5b506101af6004803603602081101561019957600080fd5b8101908080359060200190929190505050610953565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b8381101561023557808201518184015260208101905061021a565b50505050905090810190601f1680156102625780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561028157600080fd5b5061028a610a70565b005b34801561029857600080fd5b506102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b37565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561031e578082015181840152602081019050610303565b505050509050019250505060405180910390f35b34801561033e57600080fd5b5061036b6004803603602081101561035557600080fd5b8101908080359060200190929190505050610c64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b957600080fd5b506103fc600480360360208110156103d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c97565b005b34801561040a57600080fd5b506104416004803603604081101561042157600080fd5b810190808035906020019092919080359060200190929190505050610d38565b005b34801561044f57600080fd5b50610458610e5e565b005b34801561046657600080fd5b506105206004803603602081101561047d57600080fd5b810190808035906020019064010000000081111561049a57600080fd5b8201836020820111156104ac57600080fd5b803590602001918460018302840111640100000000831117156104ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f7a565b005b34801561052e57600080fd5b50610537610ff0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058557600080fd5b5061058e611019565b604051808215151515815260200191505060405180910390f35b3480156105b457600080fd5b506105bd611070565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060b57600080fd5b5061068d6004803603604081101561062257600080fd5b81019080803590602001909291908035906020019064010000000081111561064957600080fd5b82018360208201111561065b57600080fd5b8035906020019184600183028401116401000000008311171561067d57600080fd5b9091929391929390505050611095565b005b34801561069b57600080fd5b506106c8600480360360208110156106b257600080fd5b81019080803590602001909291905050506111c7565b005b3480156106d657600080fd5b5061070d600480360360408110156106ed57600080fd5b81019080803590602001909291908035906020019092919050505061122e565b005b34801561071b57600080fd5b5061075e6004803603602081101561073257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114af565b005b600854341461076e57600080fd5b6004818154811061077b57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561083e57600080fd5b505afa158015610852573d6000803e3d6000fd5b505050506040513d61014081101561086957600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061094e83826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611518565b505050565b6004818154811061096057fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a0c5780601f106109e157610100808354040283529160200191610a0c565b820191906000526020600020905b8154815290600101906020018083116109ef57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b610a78611019565b610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611dc66028913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b34573d6000803e3d6000fd5b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610ba85781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610c59578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c4c5780838381518110610c3757fe5b60200260200101818152505081806001019250505b8080600101915050610bb6565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c9f611019565b610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611dc66028913960400191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610d4957fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610d7c57600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611dee602b913960400191505060405180910390fd5b8360048681548110610e4257fe5b9060005260206000209060030201600101819055505050505050565b610e66611019565b610ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611dc66028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610fc657600080fd5b6000610fd1826117af565b905060648181610fdd57fe5b0681039050610fec828261183d565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028381600482815481106110a657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610156110d957600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611dee602b913960400191505060405180910390fd5b8484600488815481106111a057fe5b906000526020600020906003020160000191906111be929190611ca0565b50505050505050565b6111cf611019565b611224576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611dc66028913960400191505060405180910390fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611dee602b913960400191505060405180910390fd5b6000600484815481106112f557fe5b9060005260206000209060030201905060006004848154811061131457fe5b9060005260206000209060030201905060006113306064611ac8565b9050600a54811161142f5782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061142a8683600101546040518060400160405280600681526020017f7a6f6d6269650000000000000000000000000000000000000000000000000000815250611518565b61149e565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550505b6114a783611b57565b505050505050565b6114b7611019565b61150c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180611dc66028913960400191505060405180910390fd5b61151581611b81565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611dee602b913960400191505060405180910390fd5b6000600485815481106115df57fe5b906000526020600020906003020190506115f881611c79565b61166a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f7a6f6d626965206973206e6f742072656164792079657400000000000000000081525060200191505060405180910390fd5b600254848161167557fe5b06935060006002858360010154018161168a57fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b6020831061170b57805182526020820191506020810190506020830392506116e8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561175f5760636064828161175857fe5b0682030190505b61179e6040518060400160405280600681526020017f4e6f4e616d6500000000000000000000000000000000000000000000000000008152508261183d565b6117a782611b57565b505050505050565b600080826040516020018082805190602001908083835b602083106117e957805182526020820191506020810190506020830392506117c6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161183457fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906118d2929190611d20565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611a87578082015181840152602081019050611a6c565b50505050905090810190601f168015611ab45780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c81611b4f57fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bbb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ce157803560ff1916838001178555611d0f565b82800160010185558215611d0f579182015b82811115611d0e578235825591602001919060010190611cf3565b5b509050611d1c9190611da0565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d6157805160ff1916838001178555611d8f565b82800160010185558215611d8f579182015b82811115611d8e578251825591602001919060010190611d73565b5b509050611d9c9190611da0565b5090565b611dc291905b80821115611dbe576000816000905550600101611da6565b5090565b9056fe46756e6374696f6e2061636365737369626c65206f6e6c7920627920746865206f776e657220212173656e646572206973206e6f7420746865206f6e6c79206f776e6572206f662074686973207a6f6d626965a265627a7a7231582035fc95a5c1ebe946dd493b54eb8fa73112691b86d1d8dcf45cf1bf86a3efdfd564736f6c63430005100032",
  "deployedBytecode": "",
  "sourceMap": "96:806:3:-;;;261:2:4;244:19;;291:9;;285:2;:15;267:33;;324:6;304:26;;159:11:6;141:29;;155:1:3;138:18;;192:2;160:34;;568:10:1;559:6;;:19;;;;;;;;;;;;;;;;;;626:6;;;;;;;;;;;593:40;;622:1;593:40;;;;;;;;;;;;96:806:3;;;;;;",
  "deployedSourceMap": "96:806:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:125:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;466:125:6;;;;;;;;;;;;;;;;;:::i;:::-;;1556:194:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1556:194:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1556:194:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;472:23:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;472:23:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;472:23:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;472:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:88:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:88:6;;;:::i;:::-;;917:341;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:341:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;917:341:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;917:341:6;;;;;;;;;;;;;;;;;500:46:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:46:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;500:46:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;645:121:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;645:121:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;645:121:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;763:150:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:150:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;763:150:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1327:137:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1327:137:1;;;:::i;:::-;;1041:229:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1041:229:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1041:229:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1041:229:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1041:229:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1041:229:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1041:229:4;;;;;;;;;;;;;;;:::i;:::-;;701:76:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;701:76:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;863:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:89:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;279:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:29:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;595:164:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;595:164:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;595:164:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;595:164:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;595:164:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;595:164:6;;;;;;;;;;;;:::i;:::-;;381:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:81:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;381:81:6;;;;;;;;;;;;;;;;;:::i;:::-;;377:523:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:523:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;377:523:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1632:115:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1632:115:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1632:115:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;466:125:6;543:10;;530:9;:23;522:32;;;;;;560:7;568:9;560:18;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:125;:::o;1556:194:5:-;1621:13;1662;;;;;;;;;;;:22;;;1685:8;1662:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1662:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1662:32:5;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1662:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:45;1716:9;1727:8;1700:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1556:194;;;:::o;472:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;289:88:6:-;989:9:1;:7;:9::i;:::-;981:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:6:6;;;;;;;;;;;:15;;:38;350:21;334:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;334:38:6;289:88::o;917:341::-;982:13;1003:20;1037:16;:24;1054:6;1037:24;;;;;;;;;;;;;;;;1026:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1026:36:6;;;;1003:59;;1068:12;1083:1;1068:16;;1095:6;1104:1;1095:10;;1090:145;1111:7;:14;;;;1107:1;:18;1090:145;;;1164:6;1144:26;;:13;:16;1158:1;1144:16;;;;;;;;;;;;;;;;;;;;;:26;;;1140:89;;;1200:1;1182:6;1189:7;1182:15;;;;;;;;;;;;;:19;;;;;1211:9;;;;;;;1140:89;1127:3;;;;;;;1090:145;;;;1247:6;1240:13;;;;917:341;;;:::o;500:46:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;645:121:5:-;989:9:1;:7;:9::i;:::-;981:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:8:5;721:13;;:40;;;;;;;;;;;;;;;;;;645:121;:::o;763:150:6:-;832:2;836:9;266:6;238:7;246:9;238:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;230:43;;;;;;859:9;557:13:5;:24;571:9;557:24;;;;;;;;;;;;;;;;;;;;;543:38;;:10;:38;;;535:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:7:6;876;884:9;876:18;;;;;;;;;;;;;;;;;;:22;;:32;;;;279:1;763:150;;;;:::o;1327:137:1:-;989:9;:7;:9::i;:::-;981:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:1;1388:40;;1409:6;;;;;;;;;;;1388:40;;;;;;;;;;;;1455:1;1438:6;;:19;;;;;;;;;;;;;;;;;;1327:137::o;1041:229:4:-;1143:1;1111:16;:28;1128:10;1111:28;;;;;;;;;;;;;;;;:33;1103:42;;;;;;1151:12;1166:25;1185:5;1166:18;:25::i;:::-;1151:40;;1227:3;1217:7;:13;;;;;;1207:7;:23;1197:33;;1236:29;1250:5;1257:7;1236:13;:29::i;:::-;1041:229;;:::o;701:76:1:-;738:7;764:6;;;;;;;;;;;757:13;;701:76;:::o;863:89::-;902:4;939:6;;;;;;;;;;;925:20;;:10;:20;;;918:27;;863:89;:::o;279:29::-;;;;;;;;;;;;;:::o;595:164:6:-;677:1;680:9;266:6;238:7;246:9;238:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;230:43;;;;;;703:9;557:13:5;:24;571:9;557:24;;;;;;;;;;;;;;;;;;;;;543:38;;:10;:38;;;535:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:8:6;;720:7;728:9;720:18;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;279:1;595:164;;;;;:::o;381:81::-;989:9:1;:7;:9::i;:::-;981:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:4:6;440:10;:17;;;;381:81;:::o;377:523:3:-;446:9;557:13:5;:24;571:9;557:24;;;;;;;;;;;;;;;;;;;;;543:38;;:10;:38;;;535:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:23:3;489:7;497:9;489:18;;;;;;;;;;;;;;;;;;463:44;;513:26;542:7;550:9;542:18;;;;;;;;;;;;;;;;;;513:47;;566:9;578:12;586:3;578:7;:12::i;:::-;566:24;;608;;600:4;:32;596:267;;642:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:11;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:53;740:9;751:11;:15;;;724:53;;;;;;;;;;;;;;;;;:15;:53::i;:::-;596:267;;;806:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:267;869:26;886:8;869:16;:26::i;:::-;635:1:5;;;377:523:3;;;:::o;1632:115:1:-;989:9;:7;:9::i;:::-;981:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:28;1731:8;1712:18;:28::i;:::-;1632:115;:::o;1023:529:5:-;1126:9;557:13;:24;571:9;557:24;;;;;;;;;;;;;;;;;;;;;543:38;;:10;:38;;;535:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:23;1169:7;1177:9;1169:18;;;;;;;;;;;;;;;;;;1143:44;;1201:18;1210:8;1201;:18::i;:::-;1193:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:10;;1266;:23;;;;;;1253:36;;1295:11;1339:1;1325:10;1310:8;:12;;;:25;1309:31;;;;;;1295:45;;1401:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1401:25:5;;;1391:36;;;;;;1377:8;1360:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1360:26:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1360:26:5;;;1350:37;;;;;;:77;1346:133;;;1470:2;1464:3;1455:6;:12;;;;;;1446:6;:21;:26;1437:35;;1346:133;1484:31;;;;;;;;;;;;;;;;;;1508:6;1484:13;:31::i;:::-;1521:26;1538:8;1521:16;:26::i;:::-;635:1;;1023:529;;;;:::o;869:168:4:-;939:4;951:9;995:4;978:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;978:22:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;978:22:4;;;968:33;;;;;;963:39;;951:51;;1022:10;;1015:4;:17;;;;;;1008:24;;;869:168;;;:::o;597:268::-;667:7;750:1;677:7;690:56;;;;;;;;697:5;690:56;;;;704:4;690:56;;;;710:1;690:56;;;;;;726:12;;720:3;:18;690:56;;;;;;741:1;690:56;;;;;;744:1;690:56;;;;;677:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;677:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;667:84;;777:10;757:13;:17;771:2;757:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;793:16;:28;810:10;793:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;834:26;844:2;848:5;855:4;834:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;834:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:268;;;:::o;199:174:3:-;248:4;260:9;;:11;;;;;;;;;;;;;360:8;316:15;333:10;345:9;;299:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;299:56:3;;;289:67;;;;;;284:73;;:84;;;;;;277:91;;199:174;;;:::o;770:128:5:-;880:12;;862:15;:30;835:7;:17;;;:58;;;;;;;;;;;;;;;;;;770:128;:::o;1888:191:1:-;1989:1;1969:22;;:8;:22;;;;1961:31;;;;;;2036:8;2007:38;;2028:6;;;;;;;;;;;2007:38;;;;;;;;;;;;2064:8;2055:6;;:17;;;;;;;;;;;;;;;;;;1888:191;:::o;902:117:5:-;967:4;1010:3;989:7;:17;;;;;;;;;;;;:24;;;;981:33;;902:117;;;:::o;96:806:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./zombiehelper.sol\";\n\ncontract ZombieAttack is ZombieHelper {\n  uint randNonce = 0;\n  uint attackVictoryProbability = 70;\n\n  function randMod(uint _modulus) internal returns(uint) {\n    randNonce++;\n    return uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % _modulus;\n  }\n\n  function attack(uint _zombieId, uint _targetId) external onlyOwnerOf(_zombieId) {\n    Zombie storage myZombie = zombies[_zombieId];\n    Zombie storage enemyZombie = zombies[_targetId];\n    uint rand = randMod(100);\n    if (rand <= attackVictoryProbability) {\n      myZombie.winCount++;\n      myZombie.level++;\n      enemyZombie.lossCount++;\n      feedAndMultiply(_zombieId, enemyZombie.dna, \"zombie\");\n    } \n    else\n    {\n     myZombie.lossCount++;\n     enemyZombie.winCount++; \n    }\n\n    _triggerCooldown(myZombie);\n  }\n}\n",
  "sourcePath": "D:/Proyectos/CryptoZombies/contracts/zombieattack.sol",
  "ast": {
    "absolutePath": "/D/Proyectos/CryptoZombies/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        368
      ]
    },
    "id": 369,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 261,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:3"
      },
      {
        "absolutePath": "/D/Proyectos/CryptoZombies/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 262,
        "nodeType": "ImportDirective",
        "scope": 369,
        "sourceUnit": 894,
        "src": "66:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 263,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 893,
              "src": "121:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$893",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 264,
            "nodeType": "InheritanceSpecifier",
            "src": "121:12:3"
          }
        ],
        "contractDependencies": [
          161,
          525,
          721,
          893
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368,
          893,
          721,
          525,
          161
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 267,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "138:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 265,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "138:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 266,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "155:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 270,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "160:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 268,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "160:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 269,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "192:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "254:119:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "260:11:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "260:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "260:11:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 284,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 898,
                                    "src": "316:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "316:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 286,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 908,
                                    "src": "333:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "333:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 288,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 267,
                                  "src": "345:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 282,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 895,
                                  "src": "299:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "299:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "299:56:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 281,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "289:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "289:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "284:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "284:73:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 292,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "360:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "284:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "277:91:3"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "216:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:15:3"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "248:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "247:6:3"
            },
            "scope": 368,
            "src": "199:174:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "457:443:3",
              "statements": [
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "463:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 306,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 409,
                        "src": "463:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 308,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "489:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$409_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 310,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "497:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "489:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$409_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "463:44:3"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "513:26:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 312,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 409,
                        "src": "513:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "542:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$409_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 316,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "550:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "542:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$409_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "513:47:3"
                },
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "566:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "566:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "586:3:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 320,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "578:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "566:24:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 324,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "600:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "608:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "600:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "799:64:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "806:20:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 350,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "806:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 352,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "806:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 354,
                        "nodeType": "ExpressionStatement",
                        "src": "806:20:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "833:22:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 355,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "833:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 406,
                            "src": "833:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "833:22:3"
                      }
                    ]
                  },
                  "id": 361,
                  "nodeType": "IfStatement",
                  "src": "596:267:3",
                  "trueBody": {
                    "id": 349,
                    "nodeType": "Block",
                    "src": "634:150:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "642:19:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "642:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 406,
                            "src": "642:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "642:19:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "669:16:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 332,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "669:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 402,
                            "src": "669:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 336,
                        "nodeType": "ExpressionStatement",
                        "src": "669:16:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "693:23:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 337,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "693:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "693:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "693:23:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 343,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 298,
                              "src": "740:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 344,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "751:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 400,
                              "src": "751:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "768:8:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 342,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "724:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:53:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 348,
                        "nodeType": "ExpressionStatement",
                        "src": "724:53:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "myZombie",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "886:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie storage pointer"
                        }
                      ],
                      "id": 362,
                      "name": "_triggerCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "869:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$409_storage_ptr_$returns$__$",
                        "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "869:26:3"
                }
              ]
            },
            "documentation": null,
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 303,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 298,
                    "src": "446:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 304,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 302,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 574,
                  "src": "434:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "434:22:3"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "393:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "409:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:32:3"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:3"
            },
            "scope": 368,
            "src": "377:523:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 369,
        "src": "96:806:3"
      }
    ],
    "src": "32:871:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/Proyectos/CryptoZombies/contracts/zombieattack.sol",
      "exportedSymbols": {
        "ZombieAttack": [
          368
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 261,
        "name": "PragmaDirective",
        "src": "32:32:3"
      },
      {
        "attributes": {
          "SourceUnit": 894,
          "absolutePath": "/D/Proyectos/CryptoZombies/contracts/zombiehelper.sol",
          "file": "./zombiehelper.sol",
          "scope": 369,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 262,
        "name": "ImportDirective",
        "src": "66:28:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            161,
            525,
            721,
            893
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            368,
            893,
            721,
            525,
            161
          ],
          "name": "ZombieAttack",
          "scope": 369
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieHelper",
                  "referencedDeclaration": 893,
                  "type": "contract ZombieHelper"
                },
                "id": 263,
                "name": "UserDefinedTypeName",
                "src": "121:12:3"
              }
            ],
            "id": 264,
            "name": "InheritanceSpecifier",
            "src": "121:12:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randNonce",
              "scope": 368,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 265,
                "name": "ElementaryTypeName",
                "src": "138:4:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 266,
                "name": "Literal",
                "src": "155:1:3"
              }
            ],
            "id": 267,
            "name": "VariableDeclaration",
            "src": "138:18:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "attackVictoryProbability",
              "scope": 368,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 268,
                "name": "ElementaryTypeName",
                "src": "160:4:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3730",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 70",
                  "value": "70"
                },
                "id": 269,
                "name": "Literal",
                "src": "192:2:3"
              }
            ],
            "id": 270,
            "name": "VariableDeclaration",
            "src": "160:34:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "randMod",
              "scope": 368,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_modulus",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 271,
                        "name": "ElementaryTypeName",
                        "src": "216:4:3"
                      }
                    ],
                    "id": 272,
                    "name": "VariableDeclaration",
                    "src": "216:13:3"
                  }
                ],
                "id": 273,
                "name": "ParameterList",
                "src": "215:15:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 296,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 274,
                        "name": "ElementaryTypeName",
                        "src": "248:4:3"
                      }
                    ],
                    "id": 275,
                    "name": "VariableDeclaration",
                    "src": "248:4:3"
                  }
                ],
                "id": 276,
                "name": "ParameterList",
                "src": "247:6:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 267,
                              "type": "uint256",
                              "value": "randNonce"
                            },
                            "id": 277,
                            "name": "Identifier",
                            "src": "260:9:3"
                          }
                        ],
                        "id": 278,
                        "name": "UnaryOperation",
                        "src": "260:11:3"
                      }
                    ],
                    "id": 279,
                    "name": "ExpressionStatement",
                    "src": "260:11:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 276
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "%",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint"
                                },
                                "id": 280,
                                "name": "ElementaryTypeNameExpression",
                                "src": "284:4:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 902,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 281,
                                    "name": "Identifier",
                                    "src": "289:9:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "referencedDeclaration": null,
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 895,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 282,
                                            "name": "Identifier",
                                            "src": "299:3:3"
                                          }
                                        ],
                                        "id": 283,
                                        "name": "MemberAccess",
                                        "src": "299:16:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "timestamp",
                                          "referencedDeclaration": null,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 898,
                                              "type": "block",
                                              "value": "block"
                                            },
                                            "id": 284,
                                            "name": "Identifier",
                                            "src": "316:5:3"
                                          }
                                        ],
                                        "id": 285,
                                        "name": "MemberAccess",
                                        "src": "316:15:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 908,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 286,
                                            "name": "Identifier",
                                            "src": "333:3:3"
                                          }
                                        ],
                                        "id": 287,
                                        "name": "MemberAccess",
                                        "src": "333:10:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 267,
                                          "type": "uint256",
                                          "value": "randNonce"
                                        },
                                        "id": 288,
                                        "name": "Identifier",
                                        "src": "345:9:3"
                                      }
                                    ],
                                    "id": 289,
                                    "name": "FunctionCall",
                                    "src": "299:56:3"
                                  }
                                ],
                                "id": 290,
                                "name": "FunctionCall",
                                "src": "289:67:3"
                              }
                            ],
                            "id": 291,
                            "name": "FunctionCall",
                            "src": "284:73:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 272,
                              "type": "uint256",
                              "value": "_modulus"
                            },
                            "id": 292,
                            "name": "Identifier",
                            "src": "360:8:3"
                          }
                        ],
                        "id": 293,
                        "name": "BinaryOperation",
                        "src": "284:84:3"
                      }
                    ],
                    "id": 294,
                    "name": "Return",
                    "src": "277:91:3"
                  }
                ],
                "id": 295,
                "name": "Block",
                "src": "254:119:3"
              }
            ],
            "id": 296,
            "name": "FunctionDefinition",
            "src": "199:174:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "attack",
              "scope": 368,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 367,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 297,
                        "name": "ElementaryTypeName",
                        "src": "393:4:3"
                      }
                    ],
                    "id": 298,
                    "name": "VariableDeclaration",
                    "src": "393:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetId",
                      "scope": 367,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 299,
                        "name": "ElementaryTypeName",
                        "src": "409:4:3"
                      }
                    ],
                    "id": 300,
                    "name": "VariableDeclaration",
                    "src": "409:14:3"
                  }
                ],
                "id": 301,
                "name": "ParameterList",
                "src": "392:32:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 305,
                "name": "ParameterList",
                "src": "457:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 574,
                      "type": "modifier (uint256)",
                      "value": "onlyOwnerOf"
                    },
                    "id": 302,
                    "name": "Identifier",
                    "src": "434:11:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 298,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 303,
                    "name": "Identifier",
                    "src": "446:9:3"
                  }
                ],
                "id": 304,
                "name": "ModifierInvocation",
                "src": "434:22:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        307
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myZombie",
                          "scope": 366,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 409,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 306,
                            "name": "UserDefinedTypeName",
                            "src": "463:6:3"
                          }
                        ],
                        "id": 307,
                        "name": "VariableDeclaration",
                        "src": "463:23:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 412,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 308,
                            "name": "Identifier",
                            "src": "489:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 298,
                              "type": "uint256",
                              "value": "_zombieId"
                            },
                            "id": 309,
                            "name": "Identifier",
                            "src": "497:9:3"
                          }
                        ],
                        "id": 310,
                        "name": "IndexAccess",
                        "src": "489:18:3"
                      }
                    ],
                    "id": 311,
                    "name": "VariableDeclarationStatement",
                    "src": "463:44:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        313
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "enemyZombie",
                          "scope": 366,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 409,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 312,
                            "name": "UserDefinedTypeName",
                            "src": "513:6:3"
                          }
                        ],
                        "id": 313,
                        "name": "VariableDeclaration",
                        "src": "513:26:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 412,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 314,
                            "name": "Identifier",
                            "src": "542:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 300,
                              "type": "uint256",
                              "value": "_targetId"
                            },
                            "id": 315,
                            "name": "Identifier",
                            "src": "550:9:3"
                          }
                        ],
                        "id": 316,
                        "name": "IndexAccess",
                        "src": "542:18:3"
                      }
                    ],
                    "id": 317,
                    "name": "VariableDeclarationStatement",
                    "src": "513:47:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        319
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rand",
                          "scope": 366,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 318,
                            "name": "ElementaryTypeName",
                            "src": "566:4:3"
                          }
                        ],
                        "id": 319,
                        "name": "VariableDeclaration",
                        "src": "566:9:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 296,
                              "type": "function (uint256) returns (uint256)",
                              "value": "randMod"
                            },
                            "id": 320,
                            "name": "Identifier",
                            "src": "578:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "313030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 100",
                              "value": "100"
                            },
                            "id": 321,
                            "name": "Literal",
                            "src": "586:3:3"
                          }
                        ],
                        "id": 322,
                        "name": "FunctionCall",
                        "src": "578:12:3"
                      }
                    ],
                    "id": 323,
                    "name": "VariableDeclarationStatement",
                    "src": "566:24:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 319,
                              "type": "uint256",
                              "value": "rand"
                            },
                            "id": 324,
                            "name": "Identifier",
                            "src": "600:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 270,
                              "type": "uint256",
                              "value": "attackVictoryProbability"
                            },
                            "id": 325,
                            "name": "Identifier",
                            "src": "608:24:3"
                          }
                        ],
                        "id": 326,
                        "name": "BinaryOperation",
                        "src": "600:32:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "winCount",
                                      "referencedDeclaration": 406,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 307,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 327,
                                        "name": "Identifier",
                                        "src": "642:8:3"
                                      }
                                    ],
                                    "id": 329,
                                    "name": "MemberAccess",
                                    "src": "642:17:3"
                                  }
                                ],
                                "id": 330,
                                "name": "UnaryOperation",
                                "src": "642:19:3"
                              }
                            ],
                            "id": 331,
                            "name": "ExpressionStatement",
                            "src": "642:19:3"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "level",
                                      "referencedDeclaration": 402,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 307,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 332,
                                        "name": "Identifier",
                                        "src": "669:8:3"
                                      }
                                    ],
                                    "id": 334,
                                    "name": "MemberAccess",
                                    "src": "669:14:3"
                                  }
                                ],
                                "id": 335,
                                "name": "UnaryOperation",
                                "src": "669:16:3"
                              }
                            ],
                            "id": 336,
                            "name": "ExpressionStatement",
                            "src": "669:16:3"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "lossCount",
                                      "referencedDeclaration": 408,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 337,
                                        "name": "Identifier",
                                        "src": "693:11:3"
                                      }
                                    ],
                                    "id": 339,
                                    "name": "MemberAccess",
                                    "src": "693:21:3"
                                  }
                                ],
                                "id": 340,
                                "name": "UnaryOperation",
                                "src": "693:23:3"
                              }
                            ],
                            "id": 341,
                            "name": "ExpressionStatement",
                            "src": "693:23:3"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                          "typeString": "literal_string \"zombie\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 695,
                                      "type": "function (uint256,uint256,string memory)",
                                      "value": "feedAndMultiply"
                                    },
                                    "id": 342,
                                    "name": "Identifier",
                                    "src": "724:15:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 298,
                                      "type": "uint256",
                                      "value": "_zombieId"
                                    },
                                    "id": 343,
                                    "name": "Identifier",
                                    "src": "740:9:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "dna",
                                      "referencedDeclaration": 400,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 344,
                                        "name": "Identifier",
                                        "src": "751:11:3"
                                      }
                                    ],
                                    "id": 345,
                                    "name": "MemberAccess",
                                    "src": "751:15:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "7a6f6d626965",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"zombie\"",
                                      "value": "zombie"
                                    },
                                    "id": 346,
                                    "name": "Literal",
                                    "src": "768:8:3"
                                  }
                                ],
                                "id": 347,
                                "name": "FunctionCall",
                                "src": "724:53:3"
                              }
                            ],
                            "id": 348,
                            "name": "ExpressionStatement",
                            "src": "724:53:3"
                          }
                        ],
                        "id": 349,
                        "name": "Block",
                        "src": "634:150:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "lossCount",
                                      "referencedDeclaration": 408,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 307,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "myZombie"
                                        },
                                        "id": 350,
                                        "name": "Identifier",
                                        "src": "806:8:3"
                                      }
                                    ],
                                    "id": 352,
                                    "name": "MemberAccess",
                                    "src": "806:18:3"
                                  }
                                ],
                                "id": 353,
                                "name": "UnaryOperation",
                                "src": "806:20:3"
                              }
                            ],
                            "id": 354,
                            "name": "ExpressionStatement",
                            "src": "806:20:3"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint16"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "winCount",
                                      "referencedDeclaration": 406,
                                      "type": "uint16"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 313,
                                          "type": "struct ZombieFactory.Zombie storage pointer",
                                          "value": "enemyZombie"
                                        },
                                        "id": 355,
                                        "name": "Identifier",
                                        "src": "833:11:3"
                                      }
                                    ],
                                    "id": 357,
                                    "name": "MemberAccess",
                                    "src": "833:20:3"
                                  }
                                ],
                                "id": 358,
                                "name": "UnaryOperation",
                                "src": "833:22:3"
                              }
                            ],
                            "id": 359,
                            "name": "ExpressionStatement",
                            "src": "833:22:3"
                          }
                        ],
                        "id": 360,
                        "name": "Block",
                        "src": "799:64:3"
                      }
                    ],
                    "id": 361,
                    "name": "IfStatement",
                    "src": "596:267:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Zombie_$409_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 605,
                              "type": "function (struct ZombieFactory.Zombie storage pointer)",
                              "value": "_triggerCooldown"
                            },
                            "id": 362,
                            "name": "Identifier",
                            "src": "869:16:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 307,
                              "type": "struct ZombieFactory.Zombie storage pointer",
                              "value": "myZombie"
                            },
                            "id": 363,
                            "name": "Identifier",
                            "src": "886:8:3"
                          }
                        ],
                        "id": 364,
                        "name": "FunctionCall",
                        "src": "869:26:3"
                      }
                    ],
                    "id": 365,
                    "name": "ExpressionStatement",
                    "src": "869:26:3"
                  }
                ],
                "id": 366,
                "name": "Block",
                "src": "457:443:3"
              }
            ],
            "id": 367,
            "name": "FunctionDefinition",
            "src": "377:523:3"
          }
        ],
        "id": 368,
        "name": "ContractDefinition",
        "src": "96:806:3"
      }
    ],
    "id": 369,
    "name": "SourceUnit",
    "src": "32:871:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-07T11:31:01.254Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}